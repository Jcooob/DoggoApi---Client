{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\j-aco\\\\OneDrive\\\\Escritorio\\\\PI-Dogs-main\\\\client\\\\src\\\\Components\\\\NavBar\\\\NavBar.jsx\",\n  _s = $RefreshSig$();\nimport \"./NavBar.modules.css\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateSelectedTemperaments, getTemperaments, updateSelectedIdType } from \"../../Redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NavBar() {\n  _s();\n  const dispatch = useDispatch();\n  const [selectedTemperaments, setSelectedTemperaments] = useState([]);\n  const [selectedIdType, setSelectedIdType] = useState(\"\");\n  const [filterLabel, setFilterLabel] = useState(\"\");\n  const temperaments = useSelector(state => state.temperaments);\n  useEffect(() => {\n    dispatch(getTemperaments());\n  }, []);\n  useEffect(() => {\n    setFilterLabel(\"Selected Temperaments: \" + selectedTemperaments.filter(Boolean).join(\", \"));\n  }, [selectedTemperaments]);\n\n  // Función que se ejecutará cada vez que cambie el filtro de temperamentos\n  const handleSelectTemperament = useCallback(e => {\n    const selected = Array.from(e.target.selectedOptions, option => option.value);\n    setSelectedTemperaments(prevSelectedTemperaments => {\n      if (selected.length === 0) {\n        return [];\n      } else if (prevSelectedTemperaments.includes(selected[0])) {\n        return prevSelectedTemperaments.filter(temperament => temperament !== selected[0]);\n      } else {\n        return [...prevSelectedTemperaments, selected[0]];\n      }\n    });\n  }, []);\n  const handleClearSelectedTemperaments = () => {\n    setSelectedTemperaments([]);\n  };\n\n  // Función que se ejecutará cada vez que cambie el filtro de tipo de ID\n  const handleSelectIdType = useCallback(e => {\n    setSelectedIdType(e.target.value);\n  }, []);\n\n  // Función que se ejecutará cada vez que cambien los filtros\n  useEffect(() => {\n    dispatch(updateSelectedTemperaments(selectedTemperaments));\n    dispatch(updateSelectedIdType(selectedIdType));\n  }, [selectedTemperaments, selectedIdType, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NavBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"temperaments-select\",\n      children: \"Filter by temperament:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"temperaments-select\",\n      multiple: true,\n      value: selectedTemperaments,\n      onChange: handleSelectTemperament,\n      children: temperaments.map(temperament => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: temperament.temperament,\n        children: temperament.temperament\n      }, temperament.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-temperaments\",\n      children: selectedTemperaments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Selected Temperaments: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }, this), selectedTemperaments.filter(Boolean).join(\", \"), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClearSelectedTemperaments,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"id-type-select\",\n        children: \"Filter by ID type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"id-type-select\",\n        value: selectedIdType,\n        onChange: handleSelectIdType,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"number\",\n          children: \"API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"string\",\n          children: \"DB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(NavBar, \"5T69aadjEK2PrBAjEw44wXw7T70=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["useState","useEffect","useCallback","useSelector","useDispatch","updateSelectedTemperaments","getTemperaments","updateSelectedIdType","jsxDEV","_jsxDEV","NavBar","_s","dispatch","selectedTemperaments","setSelectedTemperaments","selectedIdType","setSelectedIdType","filterLabel","setFilterLabel","temperaments","state","filter","Boolean","join","handleSelectTemperament","e","selected","Array","from","target","selectedOptions","option","value","prevSelectedTemperaments","length","includes","temperament","handleClearSelectedTemperaments","handleSelectIdType","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","multiple","onChange","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/j-aco/OneDrive/Escritorio/PI-Dogs-main/client/src/Components/NavBar/NavBar.jsx"],"sourcesContent":["import \"./NavBar.modules.css\"\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateSelectedTemperaments, getTemperaments, updateSelectedIdType } from \"../../Redux/actions\";\r\n\r\nexport default function NavBar() {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [selectedTemperaments, setSelectedTemperaments] = useState([]);\r\n    const [selectedIdType, setSelectedIdType] = useState(\"\");\r\n    const [filterLabel, setFilterLabel] = useState(\"\");\r\n\r\n    const temperaments = useSelector((state) => state.temperaments);\r\n\r\n    useEffect(() => {\r\n        dispatch(getTemperaments());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      setFilterLabel(\"Selected Temperaments: \" + selectedTemperaments.filter(Boolean).join(\", \"));\r\n  }, [selectedTemperaments]);\r\n\r\n    // Función que se ejecutará cada vez que cambie el filtro de temperamentos\r\n    const handleSelectTemperament = useCallback((e) => {\r\n      const selected = Array.from(e.target.selectedOptions, (option) => option.value);\r\n      setSelectedTemperaments((prevSelectedTemperaments) => {\r\n        if (selected.length === 0) {\r\n          return [];\r\n        } else if (prevSelectedTemperaments.includes(selected[0])) {\r\n          return prevSelectedTemperaments.filter((temperament) => temperament !== selected[0]);\r\n        } else {\r\n          return [...prevSelectedTemperaments, selected[0]];\r\n        }\r\n      });\r\n    }, []);\r\n    \r\n  \r\n\r\n    const handleClearSelectedTemperaments = () => {\r\n      setSelectedTemperaments([]);\r\n    };\r\n\r\n    // Función que se ejecutará cada vez que cambie el filtro de tipo de ID\r\n    const handleSelectIdType = useCallback((e) => {\r\n        setSelectedIdType(e.target.value);\r\n    }, []);\r\n\r\n    // Función que se ejecutará cada vez que cambien los filtros\r\n    useEffect(() => {\r\n        dispatch(updateSelectedTemperaments(selectedTemperaments));\r\n        dispatch(updateSelectedIdType(selectedIdType));\r\n    }, [selectedTemperaments, selectedIdType, dispatch]);\r\n\r\n    return (\r\n        <div className=\"NavBar\"> \r\n\r\n            <label htmlFor=\"temperaments-select\">Filter by temperament:</label>\r\n\r\n            <select id=\"temperaments-select\" multiple value={selectedTemperaments} onChange={handleSelectTemperament}>\r\n              {temperaments.map((temperament) => (\r\n                <option key={temperament.id} value={temperament.temperament}>\r\n                  {temperament.temperament}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <div className=\"selected-temperaments\">\r\n              {selectedTemperaments.length > 0 && (\r\n                <div>\r\n                  <label>Selected Temperaments: </label>\r\n                    {selectedTemperaments.filter(Boolean).join(\", \")}\r\n                  <button onClick={handleClearSelectedTemperaments}>Clear</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor=\"id-type-select\">Filter by ID type:</label>\r\n                <select id=\"id-type-select\" value={selectedIdType} onChange={handleSelectIdType}>\r\n                    <option value=\"number\">API</option>\r\n                    <option value=\"string\">DB</option>\r\n                    <option value=\"all\">All</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}