{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\j-aco\\\\OneDrive\\\\Escritorio\\\\PI-Dogs-main\\\\client\\\\src\\\\Components\\\\Home\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport BreedCard from \"../BreedCard/BreedCard\";\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\";\nimport { getAllDogs } from \"../../Redux/actions\";\nimport NavBar from \"../NavBar/NavBar\";\nimport \"./Home.modules.css\";\n\n/*--------------------------------------------------------------------*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [sortByNameAsc, setSortByNameAsc] = useState(true);\n  const [sortByWeightAsc, setSortByWeightAsc] = useState(true);\n  const breeds = useSelector(state => state.dogs);\n  useEffect(() => {\n    dispatch(getAllDogs());\n  }, []);\n  const sortByName = () => {\n    const sortedBreeds = [...breeds].sort((a, b) => {\n      const nameA = a.name.toUpperCase();\n      const nameB = b.name.toUpperCase();\n      if (nameA < nameB) {\n        return sortByNameAsc ? -1 : 1;\n      }\n      if (nameA > nameB) {\n        return sortByNameAsc ? 1 : -1;\n      }\n      return 0;\n    });\n    setSortByNameAsc(!sortByNameAsc);\n    dispatch({\n      type: \"SET_DOGS\",\n      payload: sortedBreeds\n    });\n  };\n  const sortByWeight = () => {\n    const sortedBreeds = [...breeds].sort((a, b) => {\n      return sortByWeightAsc ? a.weight.metric - b.weight.metric : b.weight.metric - a.weight.metric;\n    });\n    setSortByWeightAsc(!sortByWeightAsc);\n    dispatch({\n      type: \"SET_DOGS\",\n      payload: sortedBreeds\n    });\n  };\n  if (breeds.length === 0) {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bodyHome\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sortButtons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sortByName,\n          children: [\"Sort by Name \", sortByNameAsc ? \"A-Z\" : \"Z-A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sortByWeight,\n          children: [\"Sort by Weight \", sortByWeightAsc ? \"Ascending\" : \"Descending\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardsBox\",\n        children: breeds.map(breed => /*#__PURE__*/_jsxDEV(BreedCard, {\n          id: breed.id,\n          name: breed.name,\n          img: breed.image.url,\n          temperament: breed.temperament,\n          weight: breed.weight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Home, \"GPZoU8rwaL6HrOT3l8tvBntwmws=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useSelector","useDispatch","useEffect","useState","BreedCard","LoadingScreen","getAllDogs","NavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","dispatch","sortByNameAsc","setSortByNameAsc","sortByWeightAsc","setSortByWeightAsc","breeds","state","dogs","sortByName","sortedBreeds","sort","a","b","nameA","name","toUpperCase","nameB","type","payload","sortByWeight","weight","metric","length","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","map","breed","id","img","image","url","temperament","_c","$RefreshReg$"],"sources":["C:/Users/j-aco/OneDrive/Escritorio/PI-Dogs-main/client/src/Components/Home/Home.jsx"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport BreedCard from \"../BreedCard/BreedCard\";\r\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\";\r\nimport { getAllDogs } from \"../../Redux/actions\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport \"./Home.modules.css\";\r\n\r\n/*--------------------------------------------------------------------*/\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [sortByNameAsc, setSortByNameAsc] = useState(true);\r\n  const [sortByWeightAsc, setSortByWeightAsc] = useState(true);\r\n\r\n  const breeds = useSelector((state) => state.dogs);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllDogs());\r\n  }, []);\r\n\r\n  const sortByName = () => {\r\n    const sortedBreeds = [...breeds].sort((a, b) => {\r\n      const nameA = a.name.toUpperCase();\r\n      const nameB = b.name.toUpperCase();\r\n\r\n      if (nameA < nameB) {\r\n        return sortByNameAsc ? -1 : 1;\r\n      }\r\n      if (nameA > nameB) {\r\n        return sortByNameAsc ? 1 : -1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n\r\n    setSortByNameAsc(!sortByNameAsc);\r\n    dispatch({ type: \"SET_DOGS\", payload: sortedBreeds });\r\n  };\r\n\r\n  const sortByWeight = () => {\r\n    const sortedBreeds = [...breeds].sort((a, b) => {\r\n      return sortByWeightAsc\r\n        ? a.weight.metric - b.weight.metric\r\n        : b.weight.metric - a.weight.metric;\r\n    });\r\n\r\n    setSortByWeightAsc(!sortByWeightAsc);\r\n    dispatch({ type: \"SET_DOGS\", payload: sortedBreeds });\r\n  };\r\n\r\n  if (breeds.length === 0) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bodyHome\">\r\n        <NavBar />\r\n        <div className=\"sortButtons\">\r\n          <button onClick={sortByName}>\r\n            Sort by Name {sortByNameAsc ? \"A-Z\" : \"Z-A\"}\r\n          </button>\r\n          <button onClick={sortByWeight}>\r\n            Sort by Weight {sortByWeightAsc ? \"Ascending\" : \"Descending\"}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"cardsBox\">\r\n          {breeds.map((breed) => (\r\n            <BreedCard\r\n              id={breed.id}\r\n              name={breed.name}\r\n              img={breed.image.url}\r\n              temperament={breed.temperament}\r\n              weight={breed.weight}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}