{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\j-aco\\\\OneDrive\\\\Escritorio\\\\PI-Dogs-main\\\\client\\\\src\\\\Components\\\\Home\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport BreedCard from \"../BreedCard/BreedCard\";\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\";\nimport { getAllDogs } from \"../../Redux/actions\";\nimport NavBar from \"../NavBar/NavBar\";\nimport styles from \"./Home.modules.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getAverageWeightInMetric(weight) {\n  const weightArray = weight.metric.split(\" - \");\n  const weightInKgArray = weightArray.map(w => parseFloat(w) * 0.453592);\n  const averageWeightInKg = (weightInKgArray[0] + weightInKgArray[1]) / 2;\n  return Math.round(averageWeightInKg * 10) / 10;\n}\n\n/*--------------------------------------------------------------------*/\n\nconst Home = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filteredBreeds, setFilteredBreeds] = useState([]);\n  const [selectedTemperaments, setSelectedTemperaments] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [resultsPerPage, setResultsPerPage] = useState(8);\n  const breeds = useSelector(state => state.dogs);\n  const temperaments = useSelector(state => state.selectedTemperaments);\n  const source = useSelector(state => state.selectedIdType);\n  const mode = useSelector(state => state.selectedMode);\n  const indexOfLastResult = currentPage * resultsPerPage;\n  const indexOfFirstResult = indexOfLastResult - resultsPerPage;\n  const currentResults = filteredBreeds.slice(indexOfFirstResult, indexOfLastResult);\n  const totalPages = Math.ceil(filteredBreeds.length / resultsPerPage);\n  const nextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const previousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  useEffect(() => {\n    dispatch(getAllDogs());\n  }, []);\n  useEffect(() => {\n    setFilteredBreeds(breeds.filter(breed => breed.name.toLowerCase().includes(searchTerm.toLowerCase())));\n  }, [searchTerm, breeds]);\n  useEffect(() => {\n    setSelectedTemperaments(temperaments);\n  });\n  useEffect(() => {\n    if (selectedTemperaments.length === 0 && source === \"all\") {\n      setFilteredBreeds(breeds.filter(breed => breed.name.toLowerCase().includes(searchTerm.toLowerCase())));\n    } else {\n      const filteredBreedsByTemperament = breeds.filter(breed => {\n        var _breed$temperament;\n        const breedTemperaments = (_breed$temperament = breed.temperament) === null || _breed$temperament === void 0 ? void 0 : _breed$temperament.split(', ');\n        if (mode === \"and\") {\n          return selectedTemperaments.every(temperament => breedTemperaments === null || breedTemperaments === void 0 ? void 0 : breedTemperaments.includes(temperament));\n        } else if (mode === \"or\" && selectedTemperaments.lenght === 0) {\n          return true;\n        } else if (mode === \"or\" && selectedTemperaments.length > 0) {\n          return selectedTemperaments.some(temperament => breedTemperaments === null || breedTemperaments === void 0 ? void 0 : breedTemperaments.includes(temperament));\n        }\n        return true;\n      });\n      const filteredBreedsByIdType = filteredBreedsByTemperament.filter(breed => {\n        const breedId = breed.id;\n        if (source === \"number\") {\n          return typeof breedId === \"number\";\n        } else if (source === \"string\") {\n          return typeof breedId === \"string\";\n        } else {\n          return true;\n        }\n      });\n      setFilteredBreeds(filteredBreedsByIdType.filter(breed => breed.name.toLowerCase().includes(searchTerm.toLowerCase())));\n    }\n  }, [selectedTemperaments, source, searchTerm, breeds, mode]);\n  const sortDogsByNameAsc = () => {\n    const sortedBreeds = [...filteredBreeds].sort((a, b) => a.name.localeCompare(b.name));\n    setFilteredBreeds(sortedBreeds);\n  };\n  const sortDogsByNameDesc = () => {\n    const sortedBreeds = [...filteredBreeds].sort((a, b) => b.name.localeCompare(a.name));\n    setFilteredBreeds(sortedBreeds);\n  };\n  const sortDogsByWeightAsc = () => {\n    const sortedBreeds = [...filteredBreeds].sort((a, b) => {\n      return getAverageWeightInMetric(a.weight) - getAverageWeightInMetric(b.weight);\n    });\n    setFilteredBreeds(sortedBreeds);\n  };\n  const sortDogsByWeightDesc = () => {\n    const sortedBreeds = [...filteredBreeds].sort((a, b) => {\n      return getAverageWeightInMetric(b.weight) - getAverageWeightInMetric(a.weight);\n    });\n    setFilteredBreeds(sortedBreeds);\n  };\n  const handleClick = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  if (breeds.length === 0) {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bodyHome\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchBar\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by name\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sortBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sortDogsByNameAsc,\n          children: \"Sort by name (A-Z)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sortDogsByNameDesc,\n          children: \"Sort by name (Z-A)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sortDogsByWeightAsc,\n          children: \"Sort by weight (low to high)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sortDogsByWeightDesc,\n          children: \"Sort by weight (high to low)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => previousPage(),\n          children: \"prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), Array.from({\n          length: totalPages\n        }, (_, i) => i + 1).map(page => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleClick(page),\n          className: page === currentPage ? \"active\" : \"\",\n          children: page\n        }, page, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => nextPage(),\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardsBox\",\n        children: currentResults.map(breed => /*#__PURE__*/_jsxDEV(BreedCard, {\n          id: breed.id,\n          name: breed.name,\n          img: breed.image.url,\n          temperament: breed.temperament,\n          weight: breed.weight\n        }, breed.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Home, \"83JWFWeqBeML/wQQgifYLsJ4Tdo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useSelector","useDispatch","useEffect","useState","BreedCard","LoadingScreen","getAllDogs","NavBar","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","getAverageWeightInMetric","weight","weightArray","metric","split","weightInKgArray","map","w","parseFloat","averageWeightInKg","Math","round","Home","_s","dispatch","searchTerm","setSearchTerm","filteredBreeds","setFilteredBreeds","selectedTemperaments","setSelectedTemperaments","currentPage","setCurrentPage","resultsPerPage","setResultsPerPage","breeds","state","dogs","temperaments","source","selectedIdType","mode","selectedMode","indexOfLastResult","indexOfFirstResult","currentResults","slice","totalPages","ceil","length","nextPage","previousPage","filter","breed","name","toLowerCase","includes","filteredBreedsByTemperament","_breed$temperament","breedTemperaments","temperament","every","lenght","some","filteredBreedsByIdType","breedId","id","sortDogsByNameAsc","sortedBreeds","sort","a","b","localeCompare","sortDogsByNameDesc","sortDogsByWeightAsc","sortDogsByWeightDesc","handleClick","pageNumber","fileName","_jsxFileName","lineNumber","columnNumber","children","className","type","placeholder","value","onChange","e","target","onClick","Array","from","_","i","page","img","image","url","_c","$RefreshReg$"],"sources":["C:/Users/j-aco/OneDrive/Escritorio/PI-Dogs-main/client/src/Components/Home/Home.jsx"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport BreedCard from \"../BreedCard/BreedCard\";\r\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\"\r\nimport { getAllDogs } from \"../../Redux/actions\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport styles from \"./Home.modules.css\"\r\n\r\nfunction getAverageWeightInMetric(weight) {\r\n    const weightArray = weight.metric.split(\" - \");\r\n    const weightInKgArray = weightArray.map((w) => parseFloat(w) * 0.453592);\r\n    const averageWeightInKg = (weightInKgArray[0] + weightInKgArray[1]) / 2;\r\n    return Math.round(averageWeightInKg * 10) / 10;\r\n}\r\n  \r\n/*--------------------------------------------------------------------*/\r\n\r\nconst Home = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [filteredBreeds, setFilteredBreeds] = useState([]);\r\n    const [selectedTemperaments, setSelectedTemperaments] = useState([])\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [resultsPerPage, setResultsPerPage] = useState(8);\r\n\r\n    const breeds = useSelector((state) => state.dogs);\r\n    const temperaments = useSelector((state) => state.selectedTemperaments)\r\n    const source = useSelector((state) => state.selectedIdType)\r\n    const mode = useSelector((state) => state.selectedMode)\r\n\r\n    const indexOfLastResult = currentPage * resultsPerPage;\r\n    const indexOfFirstResult = indexOfLastResult - resultsPerPage;\r\n    const currentResults = filteredBreeds.slice(indexOfFirstResult, indexOfLastResult);\r\n    const totalPages = Math.ceil(filteredBreeds.length / resultsPerPage);\r\n\r\n    const nextPage = () => {\r\n        if (currentPage < totalPages) {\r\n          setCurrentPage(currentPage + 1);\r\n        }\r\n      };\r\n\r\n      const previousPage = () => {\r\n        if (currentPage > 1) {\r\n          setCurrentPage(currentPage - 1);\r\n        }\r\n      };\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllDogs());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFilteredBreeds(breeds.filter((breed) => breed.name.toLowerCase().includes(searchTerm.toLowerCase())));\r\n    }, [searchTerm, breeds]);\r\n\r\n    useEffect(() => {\r\n        setSelectedTemperaments(temperaments)\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedTemperaments.length === 0 && source === \"all\") {\r\n          setFilteredBreeds(breeds.filter((breed) => breed.name.toLowerCase().includes(searchTerm.toLowerCase())));\r\n        } else {\r\n          const filteredBreedsByTemperament = breeds.filter((breed) => {\r\n            const breedTemperaments = breed.temperament?.split(', ');\r\n            if (mode === \"and\") {\r\n              return selectedTemperaments.every((temperament) => breedTemperaments?.includes(temperament));\r\n            } else if (mode === \"or\" && selectedTemperaments.lenght === 0) {\r\n              return true;\r\n            } else if (mode === \"or\" && selectedTemperaments.length > 0){\r\n              return selectedTemperaments.some((temperament) => breedTemperaments?.includes(temperament));\r\n            }\r\n            return true;\r\n          });\r\n          const filteredBreedsByIdType = filteredBreedsByTemperament.filter((breed) => {\r\n            const breedId = breed.id;\r\n            if (source === \"number\") {\r\n              return typeof breedId === \"number\";\r\n            } else if (source === \"string\") {\r\n              return typeof breedId === \"string\";\r\n            } else {\r\n              return true;\r\n            }\r\n          });\r\n          \r\n          setFilteredBreeds(filteredBreedsByIdType.filter((breed) => breed.name.toLowerCase().includes(searchTerm.toLowerCase())));\r\n        }\r\n    }, [selectedTemperaments, source, searchTerm, breeds, mode]);\r\n\r\n\r\n    const sortDogsByNameAsc = () => {\r\n        const sortedBreeds = [...filteredBreeds].sort((a, b) => a.name.localeCompare(b.name));\r\n        setFilteredBreeds(sortedBreeds);\r\n    };\r\n    \r\n    const sortDogsByNameDesc = () => {\r\n        const sortedBreeds = [...filteredBreeds].sort((a, b) => b.name.localeCompare(a.name));\r\n        setFilteredBreeds(sortedBreeds);\r\n    };\r\n    \r\n    const sortDogsByWeightAsc = () => {\r\n        const sortedBreeds = [...filteredBreeds].sort((a, b) => {\r\n            return getAverageWeightInMetric(a.weight) - getAverageWeightInMetric(b.weight);\r\n        });\r\n        setFilteredBreeds(sortedBreeds);\r\n    };\r\n    \r\n    const sortDogsByWeightDesc = () => {\r\n        const sortedBreeds = [...filteredBreeds].sort((a, b) => {\r\n            return getAverageWeightInMetric(b.weight) - getAverageWeightInMetric(a.weight);\r\n        });\r\n        setFilteredBreeds(sortedBreeds);\r\n    };\r\n\r\n    const handleClick = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n      }\r\n\r\n    if (breeds.length === 0) {\r\n        return <LoadingScreen />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bodyHome\">\r\n\r\n                <NavBar />\r\n\r\n                <div className=\"searchBar\">\r\n                    <input \r\n                        type=\"text\"\r\n                        placeholder=\"Search by name\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"sortBar\">\r\n                    <button onClick={sortDogsByNameAsc}>Sort by name (A-Z)</button>\r\n                    <button onClick={sortDogsByNameDesc}>Sort by name (Z-A)</button>\r\n                    <button onClick={sortDogsByWeightAsc}>Sort by weight (low to high)</button>\r\n                    <button onClick={sortDogsByWeightDesc}>Sort by weight (high to low)</button>\r\n                </div>\r\n\r\n                <div className=\"pagination\">\r\n\r\n                    <button onClick={() => previousPage()}>\r\n                        prev\r\n                    </button>\r\n\r\n                    {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\r\n                        <button key={page} onClick={() => handleClick(page)} className={page === currentPage ? \"active\" : \"\"}>\r\n                            {page}\r\n                        </button>\r\n                    ))}\r\n\r\n                    <button onClick={() => nextPage()}>\r\n                        next\r\n                    </button>\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"cardsBox\">\r\n                    {currentResults.map((breed) => (\r\n                        <BreedCard\r\n                            key={breed.id}\r\n                            id={breed.id}  \r\n                            name={breed.name}\r\n                            img={breed.image.url}\r\n                            temperament={breed.temperament}\r\n                            weight={breed.weight}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                \r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}