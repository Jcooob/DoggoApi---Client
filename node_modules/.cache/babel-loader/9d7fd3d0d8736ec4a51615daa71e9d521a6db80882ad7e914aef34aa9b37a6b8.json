{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\j-aco\\\\OneDrive\\\\Escritorio\\\\DoggoApi\\\\PI-Dogs-main\\\\client\\\\src\\\\Components\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport { getTemperaments } from \"../../Redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { postBreed } from \"../../Redux/actions\";\nimport { formValidation } from \"../../Utils/FormValidation\";\nimport axios from \"axios\";\nimport TitleBar from \"../TitleBar/TitleBar\";\nimport Footer from \"../Footer/Footer\";\nimport \"./Form.modules.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [minWeight, setMinWeight] = useState(\"\");\n  const [maxWeight, setMaxWeight] = useState(\"\");\n  const [minHeight, setMinHeight] = useState(\"\");\n  const [maxHeight, setMaxHeight] = useState(\"\");\n  const [minLifeSpan, setMinLifeSpan] = useState(\"\");\n  const [maxLifeSpan, setMaxLifeSpan] = useState(\"\");\n  const [selectedTemperaments, setSelectedTemperaments] = useState([]);\n  const [selectedTemperamentsIds, setSelectedTemperamentIds] = useState([]);\n  const [imageURL, setImageURL] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [statusColor, setStatusColor] = useState(\"\");\n  const temperaments = useSelector(state => state.temperaments);\n\n  // Esta funcion sirve para encontrar los temperamentos seleccionados por el usuario en el array de todos los temperamentos\n  // extraidos del estado global\n  const updateSelectedTemperamentIds = () => {\n    const selectedIds = selectedTemperaments.map(temperament => {\n      const matchingTemperament = temperaments.find(t => t.temperament === temperament);\n      return matchingTemperament ? matchingTemperament.id : null;\n    });\n    setSelectedTemperamentIds(selectedIds.filter(id => id !== null));\n  };\n  useEffect(() => {\n    updateSelectedTemperamentIds();\n  }, [selectedTemperaments]);\n  useEffect(() => {\n    dispatch(getTemperaments());\n  }, []);\n\n  //-------Manejadores de estados de las caracteristicas de la raza-------\n\n  const nameHandler = event => {\n    setName(event.target.value);\n  };\n  const minWeightHandler = event => {\n    setMinWeight(event.target.value);\n  };\n  const maxWeightHandler = event => {\n    setMaxWeight(event.target.value);\n  };\n  const minHeightHandler = event => {\n    setMinHeight(event.target.value);\n  };\n  const maxHeightHandler = event => {\n    setMaxHeight(event.target.value);\n  };\n  const minLifeSpanHandler = event => {\n    setMinLifeSpan(event.target.value);\n  };\n  const maxLifeSpanHandler = event => {\n    setMaxLifeSpan(event.target.value);\n  };\n  const handleInputChange = event => {\n    setImageURL(event.target.value);\n  };\n  const handleClearTemperaments = event => {\n    event.preventDefault();\n    setSelectedTemperaments([]);\n  };\n  function isValidImageURL(imageURL) {\n    return /\\.(gif|jpe?g|tiff?|png|webp|bmp)$/i.test(imageURL);\n  }\n\n  //---------------------------------------------------------------\n\n  // Se utiliza useCallback para evitar que la función se cree de nuevo en cada renderizado, \n  // lo que puede tener un impacto en el rendimiento.\n  const handleSelectTemperament = useCallback(e => {\n    // Selected contiene los valores de los elementos seleccionados en el elemento <select>\n    const selected = Array.from(e.target.selectedOptions, option => option.value);\n\n    // SelectedID contiene las claves de esos elementos seleccionados.\n    const selectedID = Array.from(e.target.selectedOptions, option => option.key);\n\n    // Se actualiza el estado de la aplicación con las claves de los elementos seleccionados.\n    setSelectedTemperamentIds(selectedID);\n    setSelectedTemperaments(prevSelectedTemperaments => {\n      //Si no hay temperamentos seleccionados retorna un array vacio\n      if (selected.length === 0) {\n        return [];\n\n        // Se comprueba si el primer elemento seleccionado ya está en la lista de elementos seleccionados. \n        // Si ese es el caso, el elemento se elimina de la lista. \n      } else if (prevSelectedTemperaments.includes(selected[0])) {\n        return prevSelectedTemperaments.filter(temperament => temperament !== selected[0]);\n\n        // Si los temperamentos seleccionados son 10 retorna los temperamentos ya seleccionados\n      } else if (prevSelectedTemperaments.length >= 10) {\n        return prevSelectedTemperaments;\n      } else {\n        // Si se selecciona un temperamento y este no esta en el array de selectedTemperaments, se añade con un push\n        const newSelectedTemperaments = [...prevSelectedTemperaments];\n        selected.forEach(temperament => {\n          if (!newSelectedTemperaments.includes(temperament)) {\n            newSelectedTemperaments.push(temperament);\n          }\n        });\n        return newSelectedTemperaments;\n      }\n    });\n  }, []);\n  formValidation(name, minWeight, maxWeight, minHeight, maxHeight, minLifeSpan, maxLifeSpan, selectedTemperaments, imageURL, setStatus, setStatusColor);\n  const breed = {\n    name: name,\n    metricHeight: minHeight + \" - \" + maxHeight,\n    metricWeight: minWeight + \" - \" + maxWeight,\n    life_span: minLifeSpan + \" - \" + maxLifeSpan + \" years \",\n    temperament: selectedTemperamentsIds,\n    img: imageURL\n  };\n  const clearForm = () => {\n    setName(\"\");\n    setMinWeight(\"\");\n    setMaxWeight(\"\");\n    setMinHeight(\"\");\n    setMaxHeight(\"\");\n    setMinLifeSpan(\"\");\n    setMaxLifeSpan(\"\");\n    setSelectedTemperaments([]);\n    setSelectedTemperamentIds([]);\n    setImageURL(\"\");\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (formValidation()) {\n      postBreed(breed).then(response => {\n        if (response instanceof axios.AxiosError) {\n          if (response.code === \"ERR_NETWORK\") {\n            setStatusColor(\"red\");\n            setStatus(\"Servers are not available, try again later\");\n          }\n          if (response.response.data.error === \"llave duplicada viola restricción de unicidad «Dogs_name_key»\") {\n            setStatusColor(\"red\");\n            setStatus(`There is already a breed called \"${breed.name}\" in the DB`);\n          }\n        } else {\n          if (response.statusText === \"OK\" && response.status === 200) {\n            setStatusColor(\"green\");\n            setStatus(\"Breed created successfully!\");\n            clearForm();\n            setTimeout(() => {\n              setStatus(\"\");\n            }, 7000);\n          }\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TitleBar, {\n      type: \"createBreed\",\n      text: \"Create your own breed!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backgroundForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"titleForm\",\n          children: \"Introduce your breed's information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"formSeparator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nameSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"breedName\",\n            className: \"formLabel\",\n            children: \"Your breed's name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"breedName\",\n            autoComplete: \"off\",\n            className: \"formInput\",\n            value: name,\n            onChange: nameHandler,\n            placeholder: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weightSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"minWeight\",\n            className: \"formLabel\",\n            children: \"Your breed's weight (kg): \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"minWeight\",\n            autoComplete: \"off\",\n            className: \"formInput\",\n            value: minWeight,\n            onChange: minWeightHandler,\n            placeholder: \"Min weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"maxWeight\",\n            autoComplete: \"off\",\n            className: \"formInput\",\n            value: maxWeight,\n            onChange: maxWeightHandler,\n            placeholder: \"Max weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heightSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"minHeight\",\n            className: \"formLabel\",\n            children: \"Your breed's height (cm): \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"minHeight\",\n            autoComplete: \"off\",\n            className: \"formInput\",\n            value: minHeight,\n            onChange: minHeightHandler,\n            placeholder: \"Min height\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"maxHeight\",\n            autoComplete: \"off\",\n            className: \"formInput\",\n            value: maxHeight,\n            onChange: maxHeightHandler,\n            placeholder: \"Max height\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lifeSpanSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"minLifeSpan\",\n            className: \"formLabel\",\n            children: \"Your breed's life span (y): \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"minLifeSpan\",\n            autoComplete: \"off\",\n            className: \"formInput\",\n            value: minLifeSpan,\n            onChange: minLifeSpanHandler,\n            placeholder: \"Min lifespan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"maxLifeSpan\",\n            autoComplete: \"off\",\n            className: \"formInput\",\n            value: maxLifeSpan,\n            onChange: maxLifeSpanHandler,\n            placeholder: \"Max lifespan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"formSeparator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temperamentSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"temperaments-selector\",\n            className: \"formLabel\",\n            children: \"Your breed temperaments: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"temperaments-selector\",\n            name: \"temperaments-selector\",\n            multiple: true,\n            value: selectedTemperaments,\n            onChange: handleSelectTemperament,\n            children: temperaments.map(temperament => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: temperament.temperament,\n              children: temperament.temperament\n            }, temperament.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"tempSelect\",\n            children: \"Selected Temperaments (Max. 10):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this), selectedTemperaments.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedTemperaments.join(\", \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No temperaments selected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClearTemperaments,\n            className: \"clearTemperamentsButton\",\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"formSeparator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imageSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formLabel\",\n            children: \"Your breed url's image: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: imageURL,\n            className: \"formInput\",\n            onChange: handleInputChange,\n            placeholder: \"http//yourDogImage.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: imageURL ? isValidImageURL(imageURL) ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageURL,\n              className: \"formInput\",\n              alt: \"Breed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"noImageSquare\",\n              children: \"Insert a valid URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"noImageSquare\",\n              children: \"Insert an URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"endForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submitButton\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: statusColor,\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Form, \"xly/uALSBEPzdOzWXzjri0bpzCo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["getTemperaments","useSelector","useDispatch","useEffect","useState","useCallback","postBreed","formValidation","axios","TitleBar","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","dispatch","name","setName","minWeight","setMinWeight","maxWeight","setMaxWeight","minHeight","setMinHeight","maxHeight","setMaxHeight","minLifeSpan","setMinLifeSpan","maxLifeSpan","setMaxLifeSpan","selectedTemperaments","setSelectedTemperaments","selectedTemperamentsIds","setSelectedTemperamentIds","imageURL","setImageURL","status","setStatus","statusColor","setStatusColor","temperaments","state","updateSelectedTemperamentIds","selectedIds","map","temperament","matchingTemperament","find","t","id","filter","nameHandler","event","target","value","minWeightHandler","maxWeightHandler","minHeightHandler","maxHeightHandler","minLifeSpanHandler","maxLifeSpanHandler","handleInputChange","handleClearTemperaments","preventDefault","isValidImageURL","test","handleSelectTemperament","e","selected","Array","from","selectedOptions","option","selectedID","key","prevSelectedTemperaments","length","includes","newSelectedTemperaments","forEach","push","breed","metricHeight","metricWeight","life_span","img","clearForm","handleSubmit","then","response","AxiosError","code","data","error","statusText","setTimeout","children","type","text","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","autoComplete","onChange","placeholder","multiple","join","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/j-aco/OneDrive/Escritorio/DoggoApi/PI-Dogs-main/client/src/Components/Form/Form.jsx"],"sourcesContent":["import { getTemperaments } from \"../../Redux/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState, useCallback } from \"react\";\r\nimport { postBreed } from \"../../Redux/actions\";\r\nimport { formValidation } from \"../../Utils/FormValidation\";\r\nimport axios from \"axios\";\r\nimport TitleBar from \"../TitleBar/TitleBar\"\r\nimport Footer from \"../Footer/Footer\";\r\nimport \"./Form.modules.css\"\r\n\r\nexport default function Form() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [minWeight, setMinWeight] = useState(\"\")\r\n    const [maxWeight, setMaxWeight] = useState(\"\")\r\n    const [minHeight, setMinHeight] = useState(\"\")\r\n    const [maxHeight, setMaxHeight] = useState(\"\")\r\n    const [minLifeSpan, setMinLifeSpan] = useState(\"\")\r\n    const [maxLifeSpan, setMaxLifeSpan] = useState(\"\")\r\n    const [selectedTemperaments, setSelectedTemperaments] = useState([])\r\n    const [selectedTemperamentsIds, setSelectedTemperamentIds] = useState([])\r\n    const [imageURL, setImageURL] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\")\r\n    const [statusColor, setStatusColor] = useState(\"\")\r\n\r\n    const temperaments = useSelector((state) => state.temperaments)\r\n\r\n    // Esta funcion sirve para encontrar los temperamentos seleccionados por el usuario en el array de todos los temperamentos\r\n    // extraidos del estado global\r\n    const updateSelectedTemperamentIds = () => {\r\n      const selectedIds = selectedTemperaments.map((temperament) => {\r\n        const matchingTemperament = temperaments.find((t) => t.temperament === temperament);\r\n        return matchingTemperament ? matchingTemperament.id : null;\r\n      });\r\n    \r\n      setSelectedTemperamentIds(selectedIds.filter((id) => id !== null));\r\n    };\r\n\r\n    useEffect(() => {\r\n      updateSelectedTemperamentIds();\r\n    }, [selectedTemperaments]);\r\n    \r\n    useEffect(() => {\r\n        dispatch(getTemperaments());\r\n    }, []);\r\n\r\n    //-------Manejadores de estados de las caracteristicas de la raza-------\r\n\r\n    const nameHandler = (event) => {\r\n        setName(event.target.value)\r\n    }\r\n    \r\n    const minWeightHandler = (event) => {\r\n        setMinWeight(event.target.value)\r\n    }\r\n    \r\n    const maxWeightHandler = (event) => {\r\n        setMaxWeight(event.target.value)\r\n    }\r\n    \r\n    const minHeightHandler = (event) => {\r\n        setMinHeight(event.target.value)\r\n    }\r\n    \r\n    const maxHeightHandler = (event) => {\r\n        setMaxHeight(event.target.value)\r\n    }\r\n    \r\n    const minLifeSpanHandler = (event) => {\r\n        setMinLifeSpan(event.target.value)\r\n    }\r\n    \r\n    const maxLifeSpanHandler = (event) => {\r\n        setMaxLifeSpan(event.target.value)\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        setImageURL(event.target.value);\r\n    }\r\n\r\n    const handleClearTemperaments = (event) => {\r\n        event.preventDefault();\r\n        setSelectedTemperaments([])\r\n    }\r\n\r\n    function isValidImageURL(imageURL) {\r\n      return /\\.(gif|jpe?g|tiff?|png|webp|bmp)$/i.test(imageURL);\r\n  }\r\n\r\n    //---------------------------------------------------------------\r\n\r\n    // Se utiliza useCallback para evitar que la función se cree de nuevo en cada renderizado, \r\n    // lo que puede tener un impacto en el rendimiento.\r\n    const handleSelectTemperament = useCallback((e) => {\r\n\r\n      // Selected contiene los valores de los elementos seleccionados en el elemento <select>\r\n      const selected = Array.from(e.target.selectedOptions, (option) => option.value);\r\n\r\n      // SelectedID contiene las claves de esos elementos seleccionados.\r\n      const selectedID = Array.from(e.target.selectedOptions, (option) => option.key);\r\n\r\n      // Se actualiza el estado de la aplicación con las claves de los elementos seleccionados.\r\n      setSelectedTemperamentIds(selectedID);\r\n    \r\n      setSelectedTemperaments((prevSelectedTemperaments) => {\r\n\r\n        //Si no hay temperamentos seleccionados retorna un array vacio\r\n        if (selected.length === 0) {\r\n          return [];\r\n\r\n        // Se comprueba si el primer elemento seleccionado ya está en la lista de elementos seleccionados. \r\n        // Si ese es el caso, el elemento se elimina de la lista. \r\n        } else if (prevSelectedTemperaments.includes(selected[0])) {\r\n          return prevSelectedTemperaments.filter((temperament) => temperament !== selected[0]);\r\n\r\n        // Si los temperamentos seleccionados son 10 retorna los temperamentos ya seleccionados\r\n        } else if (prevSelectedTemperaments.length >= 10) {\r\n          return prevSelectedTemperaments;\r\n        } else {\r\n        \r\n        // Si se selecciona un temperamento y este no esta en el array de selectedTemperaments, se añade con un push\r\n          const newSelectedTemperaments = [...prevSelectedTemperaments];\r\n          selected.forEach((temperament) => {\r\n            if (!newSelectedTemperaments.includes(temperament)) {\r\n              newSelectedTemperaments.push(temperament);\r\n            }\r\n          });\r\n          return newSelectedTemperaments;\r\n        }\r\n      });\r\n    }, []);\r\n\r\n    formValidation(        \r\n      name, \r\n      minWeight, \r\n      maxWeight, \r\n      minHeight, \r\n      maxHeight, \r\n      minLifeSpan, \r\n      maxLifeSpan,\r\n      selectedTemperaments,\r\n      imageURL,\r\n      setStatus,\r\n      setStatusColor,\r\n      )\r\n\r\n      const breed = {\r\n        name: name,\r\n        metricHeight: minHeight + \" - \" + maxHeight,\r\n        metricWeight: minWeight + \" - \" + maxWeight,\r\n        life_span: minLifeSpan + \" - \" + maxLifeSpan + \" years \",\r\n        temperament: selectedTemperamentsIds,\r\n        img: imageURL,\r\n      }\r\n\r\n      const clearForm = () => {\r\n        setName(\"\");\r\n        setMinWeight(\"\")\r\n        setMaxWeight(\"\")\r\n        setMinHeight(\"\")\r\n        setMaxHeight(\"\")\r\n        setMinLifeSpan(\"\")\r\n        setMaxLifeSpan(\"\")\r\n        setSelectedTemperaments([])\r\n        setSelectedTemperamentIds([])\r\n        setImageURL(\"\");\r\n      };\r\n\r\n      const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (formValidation()) {\r\n          postBreed(breed)\r\n            .then((response) => {\r\n              if (response instanceof axios.AxiosError) {\r\n                if (response.code === \"ERR_NETWORK\") {\r\n                  setStatusColor(\"red\")\r\n                  setStatus(\"Servers are not available, try again later\")\r\n                }\r\n                if (response.response.data.error === \"llave duplicada viola restricción de unicidad «Dogs_name_key»\") {\r\n                  setStatusColor(\"red\")\r\n                  setStatus(`There is already a breed called \"${breed.name}\" in the DB`)\r\n                }\r\n              } else {\r\n                if (response.statusText === \"OK\" && response.status === 200) {\r\n                  setStatusColor(\"green\")\r\n                  setStatus(\"Breed created successfully!\")\r\n                  clearForm();\r\n                  setTimeout(() => {\r\n                    setStatus(\"\")\r\n                  }, 7000);\r\n                }\r\n              }\r\n            })\r\n        } \r\n      };\r\n      \r\n\r\n    return (\r\n      <>\r\n        <TitleBar type={\"createBreed\"} text={\"Create your own breed!\"}  />\r\n\r\n\r\n        <div className=\"backgroundForm\">\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            \r\n            <h1 className=\"titleForm\">Introduce your breed's information</h1>\r\n            <hr className=\"formSeparator\"/>\r\n\r\n            <div className=\"nameSection\">\r\n                <label htmlFor=\"breedName\" className=\"formLabel\">Your breed's name: </label>\r\n                <input type=\"text\" name=\"breedName\" autoComplete=\"off\" className=\"formInput\" value={name} onChange={nameHandler} placeholder=\"Name\"/>\r\n            </div>\r\n\r\n            <div className=\"weightSection\">\r\n                <label htmlFor=\"minWeight\" className=\"formLabel\">Your breed's weight (kg): </label>\r\n                <input type=\"text\" name=\"minWeight\" autoComplete=\"off\" className=\"formInput\"value={minWeight} onChange={minWeightHandler} placeholder=\"Min weight\"/>\r\n                <input type=\"text\" name=\"maxWeight\" autoComplete=\"off\" className=\"formInput\" value={maxWeight} onChange={maxWeightHandler} placeholder=\"Max weight\"/>\r\n            </div>\r\n\r\n            <div className=\"heightSection\">\r\n                <label htmlFor=\"minHeight\" className=\"formLabel\">Your breed's height (cm): </label>\r\n                <input type=\"text\" name=\"minHeight\" autoComplete=\"off\" className=\"formInput\" value={minHeight} onChange={minHeightHandler} placeholder=\"Min height\"/>\r\n                <input type=\"text\" name=\"maxHeight\" autoComplete=\"off\" className=\"formInput\" value={maxHeight} onChange={maxHeightHandler} placeholder=\"Max height\"/>\r\n            </div>\r\n      \r\n            <div className=\"lifeSpanSection\">\r\n                <label htmlFor=\"minLifeSpan\" className=\"formLabel\">Your breed's life span (y): </label>\r\n                <input type=\"text\" name=\"minLifeSpan\" autoComplete=\"off\" className=\"formInput\" value={minLifeSpan} onChange={minLifeSpanHandler} placeholder=\"Min lifespan\"/>\r\n                <input type=\"text\" name=\"maxLifeSpan\" autoComplete=\"off\" className=\"formInput\" value={maxLifeSpan} onChange={maxLifeSpanHandler} placeholder=\"Max lifespan\"/>\r\n            </div>\r\n\r\n            <hr className=\"formSeparator\"/>\r\n      \r\n            <div className=\"temperamentSection\">\r\n                <label htmlFor=\"temperaments-selector\" className=\"formLabel\">Your breed temperaments: </label>\r\n\r\n                <select className=\"temperaments-selector\" name=\"temperaments-selector\" multiple value={selectedTemperaments} onChange={handleSelectTemperament}>\r\n                    {temperaments.map((temperament) => (\r\n                        <option key={temperament.id} value={temperament.temperament}>\r\n                            {temperament.temperament}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n\r\n                <label className=\"tempSelect\">Selected Temperaments (Max. 10):</label>\r\n                {selectedTemperaments.length > 0 ? (\r\n                    <p>{selectedTemperaments.join(\", \")}</p>\r\n                ) : (\r\n                    <p>No temperaments selected</p>\r\n                )}\r\n                <button onClick={handleClearTemperaments} className=\"clearTemperamentsButton\">Clear</button>\r\n            </div>\r\n\r\n            <hr className=\"formSeparator\"/>\r\n      \r\n            <div className=\"imageSection\">\r\n\r\n                <label className=\"formLabel\">Your breed url's image: </label>\r\n\r\n                <input type=\"text\" value={imageURL} className=\"formInput\" onChange={handleInputChange} placeholder=\"http//yourDogImage.jpg\"/>\r\n\r\n                <div>\r\n                    {imageURL ? (\r\n                        isValidImageURL(imageURL) ? (\r\n                            <img src={imageURL} className=\"formInput\" alt=\"Breed\" />\r\n                        ) : (\r\n                            <div className=\"noImageSquare\">Insert a valid URL</div>\r\n                        )) : (\r\n                            <div className=\"noImageSquare\">Insert an URL</div>\r\n                    )}\r\n                </div>\r\n\r\n            </div>\r\n            \r\n            <div className=\"endForm\">\r\n\r\n              <button type=\"submit\" className=\"submitButton\">Submit</button>\r\n              \r\n              <span className={statusColor}>\r\n                {status}\r\n              </span>\r\n\r\n            </div>\r\n\r\n          </form>\r\n        </div>\r\n\r\n        <Footer />\r\n        </>\r\n      );\r\n}"],"mappings":";;AAAA,SAASA,eAAe,QAAQ,qBAAqB;AACrD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3B,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAE3B,MAAMC,QAAQ,GAAGf,WAAW,EAAE;EAE9B,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC4B,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAAC8B,uBAAuB,EAAEC,yBAAyB,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACzE,MAAM,CAACgC,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkC,MAAM,EAAEC,SAAS,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACoC,WAAW,EAAEC,cAAc,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMsC,YAAY,GAAGzC,WAAW,CAAE0C,KAAK,IAAKA,KAAK,CAACD,YAAY,CAAC;;EAE/D;EACA;EACA,MAAME,4BAA4B,GAAGA,CAAA,KAAM;IACzC,MAAMC,WAAW,GAAGb,oBAAoB,CAACc,GAAG,CAAEC,WAAW,IAAK;MAC5D,MAAMC,mBAAmB,GAAGN,YAAY,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACH,WAAW,KAAKA,WAAW,CAAC;MACnF,OAAOC,mBAAmB,GAAGA,mBAAmB,CAACG,EAAE,GAAG,IAAI;IAC5D,CAAC,CAAC;IAEFhB,yBAAyB,CAACU,WAAW,CAACO,MAAM,CAAED,EAAE,IAAKA,EAAE,KAAK,IAAI,CAAC,CAAC;EACpE,CAAC;EAEDhD,SAAS,CAAC,MAAM;IACdyC,4BAA4B,EAAE;EAChC,CAAC,EAAE,CAACZ,oBAAoB,CAAC,CAAC;EAE1B7B,SAAS,CAAC,MAAM;IACZc,QAAQ,CAACjB,eAAe,EAAE,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,MAAMqD,WAAW,GAAIC,KAAK,IAAK;IAC3BnC,OAAO,CAACmC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,gBAAgB,GAAIH,KAAK,IAAK;IAChCjC,YAAY,CAACiC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAME,gBAAgB,GAAIJ,KAAK,IAAK;IAChC/B,YAAY,CAAC+B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMG,gBAAgB,GAAIL,KAAK,IAAK;IAChC7B,YAAY,CAAC6B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMI,gBAAgB,GAAIN,KAAK,IAAK;IAChC3B,YAAY,CAAC2B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMK,kBAAkB,GAAIP,KAAK,IAAK;IAClCzB,cAAc,CAACyB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EAED,MAAMM,kBAAkB,GAAIR,KAAK,IAAK;IAClCvB,cAAc,CAACuB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EAED,MAAMO,iBAAiB,GAAIT,KAAK,IAAK;IACjCjB,WAAW,CAACiB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMQ,uBAAuB,GAAIV,KAAK,IAAK;IACvCA,KAAK,CAACW,cAAc,EAAE;IACtBhC,uBAAuB,CAAC,EAAE,CAAC;EAC/B,CAAC;EAED,SAASiC,eAAeA,CAAC9B,QAAQ,EAAE;IACjC,OAAO,oCAAoC,CAAC+B,IAAI,CAAC/B,QAAQ,CAAC;EAC9D;;EAEE;;EAEA;EACA;EACA,MAAMgC,uBAAuB,GAAG/D,WAAW,CAAEgE,CAAC,IAAK;IAEjD;IACA,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACH,CAAC,CAACd,MAAM,CAACkB,eAAe,EAAGC,MAAM,IAAKA,MAAM,CAAClB,KAAK,CAAC;;IAE/E;IACA,MAAMmB,UAAU,GAAGJ,KAAK,CAACC,IAAI,CAACH,CAAC,CAACd,MAAM,CAACkB,eAAe,EAAGC,MAAM,IAAKA,MAAM,CAACE,GAAG,CAAC;;IAE/E;IACAzC,yBAAyB,CAACwC,UAAU,CAAC;IAErC1C,uBAAuB,CAAE4C,wBAAwB,IAAK;MAEpD;MACA,IAAIP,QAAQ,CAACQ,MAAM,KAAK,CAAC,EAAE;QACzB,OAAO,EAAE;;QAEX;QACA;MACA,CAAC,MAAM,IAAID,wBAAwB,CAACE,QAAQ,CAACT,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;QACzD,OAAOO,wBAAwB,CAACzB,MAAM,CAAEL,WAAW,IAAKA,WAAW,KAAKuB,QAAQ,CAAC,CAAC,CAAC,CAAC;;QAEtF;MACA,CAAC,MAAM,IAAIO,wBAAwB,CAACC,MAAM,IAAI,EAAE,EAAE;QAChD,OAAOD,wBAAwB;MACjC,CAAC,MAAM;QAEP;QACE,MAAMG,uBAAuB,GAAG,CAAC,GAAGH,wBAAwB,CAAC;QAC7DP,QAAQ,CAACW,OAAO,CAAElC,WAAW,IAAK;UAChC,IAAI,CAACiC,uBAAuB,CAACD,QAAQ,CAAChC,WAAW,CAAC,EAAE;YAClDiC,uBAAuB,CAACE,IAAI,CAACnC,WAAW,CAAC;UAC3C;QACF,CAAC,CAAC;QACF,OAAOiC,uBAAuB;MAChC;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAENzE,cAAc,CACZW,IAAI,EACJE,SAAS,EACTE,SAAS,EACTE,SAAS,EACTE,SAAS,EACTE,WAAW,EACXE,WAAW,EACXE,oBAAoB,EACpBI,QAAQ,EACRG,SAAS,EACTE,cAAc,CACb;EAED,MAAM0C,KAAK,GAAG;IACZjE,IAAI,EAAEA,IAAI;IACVkE,YAAY,EAAE5D,SAAS,GAAG,KAAK,GAAGE,SAAS;IAC3C2D,YAAY,EAAEjE,SAAS,GAAG,KAAK,GAAGE,SAAS;IAC3CgE,SAAS,EAAE1D,WAAW,GAAG,KAAK,GAAGE,WAAW,GAAG,SAAS;IACxDiB,WAAW,EAAEb,uBAAuB;IACpCqD,GAAG,EAAEnD;EACP,CAAC;EAED,MAAMoD,SAAS,GAAGA,CAAA,KAAM;IACtBrE,OAAO,CAAC,EAAE,CAAC;IACXE,YAAY,CAAC,EAAE,CAAC;IAChBE,YAAY,CAAC,EAAE,CAAC;IAChBE,YAAY,CAAC,EAAE,CAAC;IAChBE,YAAY,CAAC,EAAE,CAAC;IAChBE,cAAc,CAAC,EAAE,CAAC;IAClBE,cAAc,CAAC,EAAE,CAAC;IAClBE,uBAAuB,CAAC,EAAE,CAAC;IAC3BE,yBAAyB,CAAC,EAAE,CAAC;IAC7BE,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,MAAMoD,YAAY,GAAInC,KAAK,IAAK;IAC9BA,KAAK,CAACW,cAAc,EAAE;IACtB,IAAI1D,cAAc,EAAE,EAAE;MACpBD,SAAS,CAAC6E,KAAK,CAAC,CACbO,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAIA,QAAQ,YAAYnF,KAAK,CAACoF,UAAU,EAAE;UACxC,IAAID,QAAQ,CAACE,IAAI,KAAK,aAAa,EAAE;YACnCpD,cAAc,CAAC,KAAK,CAAC;YACrBF,SAAS,CAAC,4CAA4C,CAAC;UACzD;UACA,IAAIoD,QAAQ,CAACA,QAAQ,CAACG,IAAI,CAACC,KAAK,KAAK,+DAA+D,EAAE;YACpGtD,cAAc,CAAC,KAAK,CAAC;YACrBF,SAAS,CAAE,oCAAmC4C,KAAK,CAACjE,IAAK,aAAY,CAAC;UACxE;QACF,CAAC,MAAM;UACL,IAAIyE,QAAQ,CAACK,UAAU,KAAK,IAAI,IAAIL,QAAQ,CAACrD,MAAM,KAAK,GAAG,EAAE;YAC3DG,cAAc,CAAC,OAAO,CAAC;YACvBF,SAAS,CAAC,6BAA6B,CAAC;YACxCiD,SAAS,EAAE;YACXS,UAAU,CAAC,MAAM;cACf1D,SAAS,CAAC,EAAE,CAAC;YACf,CAAC,EAAE,IAAI,CAAC;UACV;QACF;MACF,CAAC,CAAC;IACN;EACF,CAAC;EAGH,oBACE3B,OAAA,CAAAE,SAAA;IAAAoF,QAAA,gBACEtF,OAAA,CAACH,QAAQ;MAAC0F,IAAI,EAAE,aAAc;MAACC,IAAI,EAAE;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAGlE5F,OAAA;MAAK6F,SAAS,EAAC,gBAAgB;MAAAP,QAAA,eAE7BtF,OAAA;QAAM8F,QAAQ,EAAEjB,YAAa;QAAAS,QAAA,gBAE3BtF,OAAA;UAAI6F,SAAS,EAAC,WAAW;UAAAP,QAAA,EAAC;QAAkC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACjE5F,OAAA;UAAI6F,SAAS,EAAC;QAAe;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eAE/B5F,OAAA;UAAK6F,SAAS,EAAC,aAAa;UAAAP,QAAA,gBACxBtF,OAAA;YAAO+F,OAAO,EAAC,WAAW;YAACF,SAAS,EAAC,WAAW;YAAAP,QAAA,EAAC;UAAmB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eAC5E5F,OAAA;YAAOuF,IAAI,EAAC,MAAM;YAACjF,IAAI,EAAC,WAAW;YAAC0F,YAAY,EAAC,KAAK;YAACH,SAAS,EAAC,WAAW;YAACjD,KAAK,EAAEtC,IAAK;YAAC2F,QAAQ,EAAExD,WAAY;YAACyD,WAAW,EAAC;UAAM;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACnI,eAEN5F,OAAA;UAAK6F,SAAS,EAAC,eAAe;UAAAP,QAAA,gBAC1BtF,OAAA;YAAO+F,OAAO,EAAC,WAAW;YAACF,SAAS,EAAC,WAAW;YAAAP,QAAA,EAAC;UAA0B;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eACnF5F,OAAA;YAAOuF,IAAI,EAAC,MAAM;YAACjF,IAAI,EAAC,WAAW;YAAC0F,YAAY,EAAC,KAAK;YAACH,SAAS,EAAC,WAAW;YAAAjD,KAAK,EAAEpC,SAAU;YAACyF,QAAQ,EAAEpD,gBAAiB;YAACqD,WAAW,EAAC;UAAY;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE,eACpJ5F,OAAA;YAAOuF,IAAI,EAAC,MAAM;YAACjF,IAAI,EAAC,WAAW;YAAC0F,YAAY,EAAC,KAAK;YAACH,SAAS,EAAC,WAAW;YAACjD,KAAK,EAAElC,SAAU;YAACuF,QAAQ,EAAEnD,gBAAiB;YAACoD,WAAW,EAAC;UAAY;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACnJ,eAEN5F,OAAA;UAAK6F,SAAS,EAAC,eAAe;UAAAP,QAAA,gBAC1BtF,OAAA;YAAO+F,OAAO,EAAC,WAAW;YAACF,SAAS,EAAC,WAAW;YAAAP,QAAA,EAAC;UAA0B;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eACnF5F,OAAA;YAAOuF,IAAI,EAAC,MAAM;YAACjF,IAAI,EAAC,WAAW;YAAC0F,YAAY,EAAC,KAAK;YAACH,SAAS,EAAC,WAAW;YAACjD,KAAK,EAAEhC,SAAU;YAACqF,QAAQ,EAAElD,gBAAiB;YAACmD,WAAW,EAAC;UAAY;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE,eACrJ5F,OAAA;YAAOuF,IAAI,EAAC,MAAM;YAACjF,IAAI,EAAC,WAAW;YAAC0F,YAAY,EAAC,KAAK;YAACH,SAAS,EAAC,WAAW;YAACjD,KAAK,EAAE9B,SAAU;YAACmF,QAAQ,EAAEjD,gBAAiB;YAACkD,WAAW,EAAC;UAAY;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACnJ,eAEN5F,OAAA;UAAK6F,SAAS,EAAC,iBAAiB;UAAAP,QAAA,gBAC5BtF,OAAA;YAAO+F,OAAO,EAAC,aAAa;YAACF,SAAS,EAAC,WAAW;YAAAP,QAAA,EAAC;UAA4B;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eACvF5F,OAAA;YAAOuF,IAAI,EAAC,MAAM;YAACjF,IAAI,EAAC,aAAa;YAAC0F,YAAY,EAAC,KAAK;YAACH,SAAS,EAAC,WAAW;YAACjD,KAAK,EAAE5B,WAAY;YAACiF,QAAQ,EAAEhD,kBAAmB;YAACiD,WAAW,EAAC;UAAc;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE,eAC7J5F,OAAA;YAAOuF,IAAI,EAAC,MAAM;YAACjF,IAAI,EAAC,aAAa;YAAC0F,YAAY,EAAC,KAAK;YAACH,SAAS,EAAC,WAAW;YAACjD,KAAK,EAAE1B,WAAY;YAAC+E,QAAQ,EAAE/C,kBAAmB;YAACgD,WAAW,EAAC;UAAc;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC3J,eAEN5F,OAAA;UAAI6F,SAAS,EAAC;QAAe;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eAE/B5F,OAAA;UAAK6F,SAAS,EAAC,oBAAoB;UAAAP,QAAA,gBAC/BtF,OAAA;YAAO+F,OAAO,EAAC,uBAAuB;YAACF,SAAS,EAAC,WAAW;YAAAP,QAAA,EAAC;UAAyB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eAE9F5F,OAAA;YAAQ6F,SAAS,EAAC,uBAAuB;YAACvF,IAAI,EAAC,uBAAuB;YAAC6F,QAAQ;YAACvD,KAAK,EAAExB,oBAAqB;YAAC6E,QAAQ,EAAEzC,uBAAwB;YAAA8B,QAAA,EAC1IxD,YAAY,CAACI,GAAG,CAAEC,WAAW,iBAC1BnC,OAAA;cAA6B4C,KAAK,EAAET,WAAW,CAACA,WAAY;cAAAmD,QAAA,EACvDnD,WAAW,CAACA;YAAW,GADfA,WAAW,CAACI,EAAE;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAG9B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACG,eAET5F,OAAA;YAAO6F,SAAS,EAAC,YAAY;YAAAP,QAAA,EAAC;UAAgC;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,EACrExE,oBAAoB,CAAC8C,MAAM,GAAG,CAAC,gBAC5BlE,OAAA;YAAAsF,QAAA,EAAIlE,oBAAoB,CAACgF,IAAI,CAAC,IAAI;UAAC;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,gBAExC5F,OAAA;YAAAsF,QAAA,EAAG;UAAwB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC9B,eACD5F,OAAA;YAAQqG,OAAO,EAAEjD,uBAAwB;YAACyC,SAAS,EAAC,yBAAyB;YAAAP,QAAA,EAAC;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC1F,eAEN5F,OAAA;UAAI6F,SAAS,EAAC;QAAe;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eAE/B5F,OAAA;UAAK6F,SAAS,EAAC,cAAc;UAAAP,QAAA,gBAEzBtF,OAAA;YAAO6F,SAAS,EAAC,WAAW;YAAAP,QAAA,EAAC;UAAwB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eAE7D5F,OAAA;YAAOuF,IAAI,EAAC,MAAM;YAAC3C,KAAK,EAAEpB,QAAS;YAACqE,SAAS,EAAC,WAAW;YAACI,QAAQ,EAAE9C,iBAAkB;YAAC+C,WAAW,EAAC;UAAwB;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE,eAE7H5F,OAAA;YAAAsF,QAAA,EACK9D,QAAQ,GACL8B,eAAe,CAAC9B,QAAQ,CAAC,gBACrBxB,OAAA;cAAKsG,GAAG,EAAE9E,QAAS;cAACqE,SAAS,EAAC,WAAW;cAACU,GAAG,EAAC;YAAO;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG,gBAExD5F,OAAA;cAAK6F,SAAS,EAAC,eAAe;cAAAP,QAAA,EAAC;YAAkB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACpD,gBACG5F,OAAA;cAAK6F,SAAS,EAAC,eAAe;cAAAP,QAAA,EAAC;YAAa;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UACnD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAEJ,eAEN5F,OAAA;UAAK6F,SAAS,EAAC,SAAS;UAAAP,QAAA,gBAEtBtF,OAAA;YAAQuF,IAAI,EAAC,QAAQ;YAACM,SAAS,EAAC,cAAc;YAAAP,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eAE9D5F,OAAA;YAAM6F,SAAS,EAAEjE,WAAY;YAAA0D,QAAA,EAC1B5D;UAAM;YAAA+D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACF;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAEH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAED;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACH,eAEN5F,OAAA,CAACF,MAAM;MAAA2F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBACP;AAEX;AAACxF,EAAA,CA3RuBD,IAAI;EAAA,QAEPb,WAAW,EAePD,WAAW;AAAA;AAAAmH,EAAA,GAjBZrG,IAAI;AAAA,IAAAqG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}