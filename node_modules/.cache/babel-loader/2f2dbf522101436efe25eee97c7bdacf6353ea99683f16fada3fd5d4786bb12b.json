{"ast":null,"code":"function getAverageWeightInMetric(weightRange) {\n  const weightArray = weightRange.split(\" - \");\n  const weightInKgArray = weightArray.map(w => parseFloat(w));\n  const averageWeightInKg = (weightInKgArray[0] + weightInKgArray[1]) / 2;\n  return Math.round(averageWeightInKg * 10) / 10;\n}\nfunction getAverageLifeSpan(lifespan) {\n  if (!lifespan) {\n    return 0;\n  }\n  const lifespanArray = lifespan.split(\" - \");\n  if (lifespanArray.length > 1) {\n    const lifespanInYearsArray = lifespanArray.map(l => parseInt(l));\n    const averageLifespanInYears = (lifespanInYearsArray[0] + lifespanInYearsArray[1]) / 2;\n    return Math.round(averageLifespanInYears * 10) / 10;\n  } else {\n    return parseInt(lifespan);\n  }\n}\nmodule.exports = {\n  getAverageLifeSpan,\n  getAverageWeightInMetric\n};","map":{"version":3,"names":["getAverageWeightInMetric","weightRange","weightArray","split","weightInKgArray","map","w","parseFloat","averageWeightInKg","Math","round","getAverageLifeSpan","lifespan","lifespanArray","length","lifespanInYearsArray","l","parseInt","averageLifespanInYears","module","exports"],"sources":["C:/Users/j-aco/OneDrive/Escritorio/DoggoApi/PI-Dogs-main/client/src/Utils/GetAverageFunctions.js"],"sourcesContent":["\r\n\r\nfunction getAverageWeightInMetric(weightRange) {\r\n  const weightArray = weightRange.split(\" - \");\r\n  const weightInKgArray = weightArray.map((w) => parseFloat(w));\r\n  const averageWeightInKg = (weightInKgArray[0] + weightInKgArray[1]) / 2;\r\n  return Math.round(averageWeightInKg * 10) / 10;\r\n}\r\n\r\n\r\nfunction getAverageLifeSpan(lifespan) {\r\n    if (!lifespan) {\r\n      return 0;\r\n    }\r\n    const lifespanArray = lifespan.split(\" - \");\r\n    if (lifespanArray.length > 1) {\r\n      const lifespanInYearsArray = lifespanArray.map((l) => parseInt(l));\r\n      const averageLifespanInYears = (lifespanInYearsArray[0] + lifespanInYearsArray[1]) / 2;\r\n      return Math.round(averageLifespanInYears * 10) / 10;\r\n    } else {\r\n      return parseInt(lifespan);\r\n    }\r\n  }\r\n\r\n  module.exports = {getAverageLifeSpan, getAverageWeightInMetric}"],"mappings":"AAEA,SAASA,wBAAwBA,CAACC,WAAW,EAAE;EAC7C,MAAMC,WAAW,GAAGD,WAAW,CAACE,KAAK,CAAC,KAAK,CAAC;EAC5C,MAAMC,eAAe,GAAGF,WAAW,CAACG,GAAG,CAAEC,CAAC,IAAKC,UAAU,CAACD,CAAC,CAAC,CAAC;EAC7D,MAAME,iBAAiB,GAAG,CAACJ,eAAe,CAAC,CAAC,CAAC,GAAGA,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC;EACvE,OAAOK,IAAI,CAACC,KAAK,CAACF,iBAAiB,GAAG,EAAE,CAAC,GAAG,EAAE;AAChD;AAGA,SAASG,kBAAkBA,CAACC,QAAQ,EAAE;EAClC,IAAI,CAACA,QAAQ,EAAE;IACb,OAAO,CAAC;EACV;EACA,MAAMC,aAAa,GAAGD,QAAQ,CAACT,KAAK,CAAC,KAAK,CAAC;EAC3C,IAAIU,aAAa,CAACC,MAAM,GAAG,CAAC,EAAE;IAC5B,MAAMC,oBAAoB,GAAGF,aAAa,CAACR,GAAG,CAAEW,CAAC,IAAKC,QAAQ,CAACD,CAAC,CAAC,CAAC;IAClE,MAAME,sBAAsB,GAAG,CAACH,oBAAoB,CAAC,CAAC,CAAC,GAAGA,oBAAoB,CAAC,CAAC,CAAC,IAAI,CAAC;IACtF,OAAON,IAAI,CAACC,KAAK,CAACQ,sBAAsB,GAAG,EAAE,CAAC,GAAG,EAAE;EACrD,CAAC,MAAM;IACL,OAAOD,QAAQ,CAACL,QAAQ,CAAC;EAC3B;AACF;AAEAO,MAAM,CAACC,OAAO,GAAG;EAACT,kBAAkB;EAAEX;AAAwB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}