{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\j-aco\\\\OneDrive\\\\Escritorio\\\\PI-Dogs-main\\\\client\\\\src\\\\Components\\\\NavBar\\\\NavBar.jsx\",\n  _s = $RefreshSig$();\nimport \"./NavBar.modules.css\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateSelectedTemperaments, getTemperaments, updateSelectedIdType } from \"../../Redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NavBar() {\n  _s();\n  const dispatch = useDispatch();\n  const [selectedTemperaments, setSelectedTemperaments] = useState([]);\n  const [selectedIdType, setSelectedIdType] = useState(\"\");\n  const temperaments = useSelector(state => state.temperaments);\n  useEffect(() => {\n    dispatch(getTemperaments());\n  }, []);\n  const handleSelectTemperament = e => {\n    const selected = Array.from(e.target.selectedOptions, option => option.value);\n\n    // Iterar sobre los temperamentos seleccionados\n    for (let i = 0; i < selected.length; i++) {\n      const index = selectedTemperaments.indexOf(selected[i]);\n\n      // Si el temperamento ya está seleccionado, quitarlo de la lista\n      if (index !== -1) {\n        setSelectedTemperaments(prevState => prevState.filter(temperament => temperament !== selected[i]));\n      }\n      // Si el temperamento no está seleccionado, agregarlo a la lista\n      else {\n        setSelectedTemperaments(prevState => [...prevState, selected[i]]);\n      }\n    }\n  };\n  const handleApplyFilters = () => {\n    // Despachar una acción que actualice los perros mostrados en el componente Home\n    dispatch(updateSelectedTemperaments(selectedTemperaments));\n    dispatch(updateSelectedIdType(selectedIdType));\n  };\n  const handleClearSelectedTemperaments = () => {\n    setSelectedTemperaments([]);\n  };\n  const handleSelectNumericIdType = () => {\n    setSelectedIdType(\"numeric\");\n  };\n  const handleSelectAlphanumericIdType = () => {\n    setSelectedIdType(\"alphanumeric\");\n  };\n  const handleSelectAllSources = () => {\n    setSelectedIdType(\"default\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NavBar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"temperaments-select\",\n        children: \"Filter by temperament:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"temperaments-select\",\n        multiple: true,\n        value: selectedTemperaments,\n        onChange: handleSelectTemperament,\n        children: temperaments.map(temperament => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: temperament.temperament,\n          children: temperament.temperament\n        }, temperament.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-temperaments\",\n        children: selectedTemperaments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Selected temperaments: \", selectedTemperaments.join(\", \"), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClearSelectedTemperaments,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSelectNumericIdType,\n          children: \"Numeric ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSelectAlphanumericIdType,\n          children: \"Alphanumeric ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSelectAllSources,\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleApplyFilters,\n        children: \"Apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(NavBar, \"ylqWj51iAGksszwXoUjDRuK2bVQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["useState","useEffect","useSelector","useDispatch","updateSelectedTemperaments","getTemperaments","updateSelectedIdType","jsxDEV","_jsxDEV","NavBar","_s","dispatch","selectedTemperaments","setSelectedTemperaments","selectedIdType","setSelectedIdType","temperaments","state","handleSelectTemperament","e","selected","Array","from","target","selectedOptions","option","value","i","length","index","indexOf","prevState","filter","temperament","handleApplyFilters","handleClearSelectedTemperaments","handleSelectNumericIdType","handleSelectAlphanumericIdType","handleSelectAllSources","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","multiple","onChange","map","join","onClick","_c","$RefreshReg$"],"sources":["C:/Users/j-aco/OneDrive/Escritorio/PI-Dogs-main/client/src/Components/NavBar/NavBar.jsx"],"sourcesContent":["import \"./NavBar.modules.css\"\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateSelectedTemperaments, getTemperaments, updateSelectedIdType} from \"../../Redux/actions\";\r\nexport default function NavBar() {\r\n    \r\n    const dispatch = useDispatch();\r\n    const [selectedTemperaments, setSelectedTemperaments] = useState([]);\r\n    const [selectedIdType, setSelectedIdType] = useState(\"\");\r\n    const temperaments = useSelector((state) => state.temperaments);\r\n\r\n    useEffect(() => {\r\n        dispatch(getTemperaments());\r\n    }, []);\r\n\r\n    const handleSelectTemperament = (e) => {\r\n        const selected = Array.from(e.target.selectedOptions, (option) => option.value);\r\n      \r\n        // Iterar sobre los temperamentos seleccionados\r\n        for (let i = 0; i < selected.length; i++) {\r\n          const index = selectedTemperaments.indexOf(selected[i]);\r\n      \r\n          // Si el temperamento ya está seleccionado, quitarlo de la lista\r\n          if (index !== -1) {\r\n            setSelectedTemperaments((prevState) =>\r\n              prevState.filter((temperament) => temperament !== selected[i])\r\n            );\r\n          }\r\n          // Si el temperamento no está seleccionado, agregarlo a la lista\r\n          else {\r\n            setSelectedTemperaments((prevState) => [...prevState, selected[i]]);\r\n          }\r\n        }\r\n      };\r\n      \r\n\r\n      const handleApplyFilters = () => {\r\n        // Despachar una acción que actualice los perros mostrados en el componente Home\r\n        dispatch(updateSelectedTemperaments(selectedTemperaments));\r\n        dispatch(updateSelectedIdType(selectedIdType));\r\n      };\r\n\r\n    const handleClearSelectedTemperaments = () => {\r\n        setSelectedTemperaments([]);\r\n      };\r\n    \r\n    const handleSelectNumericIdType = () => {\r\n        setSelectedIdType(\"numeric\");\r\n      };\r\n    \r\n    const handleSelectAlphanumericIdType = () => {\r\n        setSelectedIdType(\"alphanumeric\");\r\n      };\r\n\r\n    const handleSelectAllSources = () => {\r\n        setSelectedIdType(\"default\")\r\n    }\r\n\r\n      \r\n\r\n      return (\r\n        <div className=\"NavBar\">\r\n          <div>\r\n            <label htmlFor=\"temperaments-select\">Filter by temperament:</label>\r\n            <select id=\"temperaments-select\" multiple value={selectedTemperaments} onChange={handleSelectTemperament}>\r\n              {temperaments.map((temperament) => (\r\n                <option key={temperament.id} value={temperament.temperament}>\r\n                  {temperament.temperament}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <div className=\"selected-temperaments\">\r\n              {selectedTemperaments.length > 0 && (\r\n                <div>\r\n                  Selected temperaments: {selectedTemperaments.join(\", \")}\r\n                  <button onClick={handleClearSelectedTemperaments}>Clear</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div>\r\n                <button onClick={handleSelectNumericIdType}>Numeric ID</button>\r\n                <button onClick={handleSelectAlphanumericIdType}>Alphanumeric ID</button>\r\n                <button onClick={handleSelectAllSources}>All</button>\r\n            </div>\r\n            <button onClick={handleApplyFilters}>Apply</button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}