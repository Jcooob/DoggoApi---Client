{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\j-aco\\\\OneDrive\\\\Escritorio\\\\PI-Dogs-main\\\\client\\\\src\\\\Components\\\\NavBar\\\\NavBar.jsx\",\n  _s = $RefreshSig$();\nimport \"./NavBar.modules.css\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { sortDogsByName, sortDogsByWeight, getTemperaments } from \"../../Redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NavBar() {\n  _s();\n  const dispatch = useDispatch();\n  const [selectedTemperaments, setSelectedTemperaments] = useState([]);\n  const temperaments = useSelector(state => state.temperaments);\n  useEffect(() => {\n    dispatch(getTemperaments());\n  }, []);\n  const handleSelectTemperament = e => {\n    const selected = Array.from(e.target.selectedOptions, option => option.value);\n\n    // Iterar sobre los temperamentos seleccionados\n    for (let i = 0; i < selected.length; i++) {\n      const index = selectedTemperaments.indexOf(selected[i]);\n\n      // Si el temperamento ya está seleccionado, quitarlo de la lista\n      if (index !== -1) {\n        setSelectedTemperaments(prevState => prevState.filter(temperament => temperament !== selected[i]));\n      }\n      // Si el temperamento no está seleccionado, agregarlo a la lista\n      else {\n        setSelectedTemperaments(prevState => [...prevState, selected[i]]);\n      }\n    }\n  };\n  const handleApplyFilters = () => {\n    // Despachar una acción que actualice los perros mostrados en el componente Home\n  };\n  const handleClearSelectedTemperaments = () => {\n    setSelectedTemperaments([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NavBar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"temperaments-select\",\n        children: \"Filter by temperament:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"temperaments-select\",\n        multiple: true,\n        value: selectedTemperaments,\n        onChange: handleSelectTemperament,\n        children: temperaments.map(temperament => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: temperament.temperament,\n          children: temperament.temperament\n        }, temperament.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-temperaments\",\n        children: selectedTemperaments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Selected temperaments: \", selectedTemperaments.join(\", \"), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClearSelectedTemperaments,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleApplyFilters,\n        children: \"Apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(NavBar, \"38O+Y9x+256P64FlfXJdknb/rCo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["useState","useEffect","useSelector","useDispatch","sortDogsByName","sortDogsByWeight","getTemperaments","jsxDEV","_jsxDEV","NavBar","_s","dispatch","selectedTemperaments","setSelectedTemperaments","temperaments","state","handleSelectTemperament","e","selected","Array","from","target","selectedOptions","option","value","i","length","index","indexOf","prevState","filter","temperament","handleApplyFilters","handleClearSelectedTemperaments","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","multiple","onChange","map","join","onClick","_c","$RefreshReg$"],"sources":["C:/Users/j-aco/OneDrive/Escritorio/PI-Dogs-main/client/src/Components/NavBar/NavBar.jsx"],"sourcesContent":["import \"./NavBar.modules.css\"\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { sortDogsByName, sortDogsByWeight, getTemperaments} from \"../../Redux/actions\";\r\nexport default function NavBar() {\r\n    \r\n    const dispatch = useDispatch();\r\n    const [selectedTemperaments, setSelectedTemperaments] = useState([]);\r\n    const temperaments = useSelector((state) => state.temperaments);\r\n\r\n    useEffect(() => {\r\n        dispatch(getTemperaments());\r\n    }, []);\r\n\r\n    const handleSelectTemperament = (e) => {\r\n        const selected = Array.from(e.target.selectedOptions, (option) => option.value);\r\n      \r\n        // Iterar sobre los temperamentos seleccionados\r\n        for (let i = 0; i < selected.length; i++) {\r\n          const index = selectedTemperaments.indexOf(selected[i]);\r\n      \r\n          // Si el temperamento ya está seleccionado, quitarlo de la lista\r\n          if (index !== -1) {\r\n            setSelectedTemperaments((prevState) =>\r\n              prevState.filter((temperament) => temperament !== selected[i])\r\n            );\r\n          }\r\n          // Si el temperamento no está seleccionado, agregarlo a la lista\r\n          else {\r\n            setSelectedTemperaments((prevState) => [...prevState, selected[i]]);\r\n          }\r\n        }\r\n      };\r\n      \r\n\r\n    const handleApplyFilters = () => {\r\n        // Despachar una acción que actualice los perros mostrados en el componente Home\r\n    };\r\n\r\n    const handleClearSelectedTemperaments = () => {\r\n        setSelectedTemperaments([]);\r\n      };\r\n\r\n    return (\r\n        <div className=\"NavBar\">\r\n      <div>\r\n        <label htmlFor=\"temperaments-select\">Filter by temperament:</label>\r\n        <select\r\n          id=\"temperaments-select\"\r\n          multiple\r\n          value={selectedTemperaments}\r\n          onChange={handleSelectTemperament}\r\n        >\r\n          {temperaments.map((temperament) => (\r\n            <option key={temperament.id} value={temperament.temperament}>\r\n              {temperament.temperament}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <div className=\"selected-temperaments\">\r\n          {selectedTemperaments.length > 0 && (\r\n            <div>\r\n              Selected temperaments: {selectedTemperaments.join(\", \")}\r\n              <button onClick={handleClearSelectedTemperaments}>Clear</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <button onClick={handleApplyFilters}>Apply</button>\r\n      </div>\r\n        </div>\r\n      );\r\n}"],"mappings":";;AAAA,OAAO,sBAAsB;AAC7B,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,EAAEC,gBAAgB,EAAEC,eAAe,QAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvF,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAE7B,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAM,CAACS,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAMc,YAAY,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACD,YAAY,CAAC;EAE/Db,SAAS,CAAC,MAAM;IACZU,QAAQ,CAACL,eAAe,EAAE,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,uBAAuB,GAAIC,CAAC,IAAK;IACnC,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACH,CAAC,CAACI,MAAM,CAACC,eAAe,EAAGC,MAAM,IAAKA,MAAM,CAACC,KAAK,CAAC;;IAE/E;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,QAAQ,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;MACxC,MAAME,KAAK,GAAGf,oBAAoB,CAACgB,OAAO,CAACV,QAAQ,CAACO,CAAC,CAAC,CAAC;;MAEvD;MACA,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBd,uBAAuB,CAAEgB,SAAS,IAChCA,SAAS,CAACC,MAAM,CAAEC,WAAW,IAAKA,WAAW,KAAKb,QAAQ,CAACO,CAAC,CAAC,CAAC,CAC/D;MACH;MACA;MAAA,KACK;QACHZ,uBAAuB,CAAEgB,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEX,QAAQ,CAACO,CAAC,CAAC,CAAC,CAAC;MACrE;IACF;EACF,CAAC;EAGH,MAAMO,kBAAkB,GAAGA,CAAA,KAAM;IAC7B;EAAA,CACH;EAED,MAAMC,+BAA+B,GAAGA,CAAA,KAAM;IAC1CpB,uBAAuB,CAAC,EAAE,CAAC;EAC7B,CAAC;EAEH,oBACIL,OAAA;IAAK0B,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACzB3B,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAO4B,OAAO,EAAC,qBAAqB;QAAAD,QAAA,EAAC;MAAsB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACnEhC,OAAA;QACEiC,EAAE,EAAC,qBAAqB;QACxBC,QAAQ;QACRlB,KAAK,EAAEZ,oBAAqB;QAC5B+B,QAAQ,EAAE3B,uBAAwB;QAAAmB,QAAA,EAEjCrB,YAAY,CAAC8B,GAAG,CAAEb,WAAW,iBAC5BvB,OAAA;UAA6BgB,KAAK,EAAEO,WAAW,CAACA,WAAY;UAAAI,QAAA,EACzDJ,WAAW,CAACA;QAAW,GADbA,WAAW,CAACU,EAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAG5B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACK,eACThC,OAAA;QAAK0B,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EACnCvB,oBAAoB,CAACc,MAAM,GAAG,CAAC,iBAC9BlB,OAAA;UAAA2B,QAAA,GAAK,yBACoB,EAACvB,oBAAoB,CAACiC,IAAI,CAAC,IAAI,CAAC,eACvDrC,OAAA;YAAQsC,OAAO,EAAEb,+BAAgC;YAAAE,QAAA,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAEnE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACG,eACNhC,OAAA;QAAQsC,OAAO,EAAEd,kBAAmB;QAAAG,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC/C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEd;AAAC9B,EAAA,CAnEuBD,MAAM;EAAA,QAETN,WAAW,EAEPD,WAAW;AAAA;AAAA6C,EAAA,GAJZtC,MAAM;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}