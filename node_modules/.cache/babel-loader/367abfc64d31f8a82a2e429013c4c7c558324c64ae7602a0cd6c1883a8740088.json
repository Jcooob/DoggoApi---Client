{"ast":null,"code":"function formValidation(name, minWeight, maxWeight, minHeight, maxHeight, minLifeSpan, maxLifeSpan, selectedTemperaments, imageURL, isValidImageURL, setStatus, setStatusColor) {\n  if (name === \"\" || !/^[a-zA-Z]+$/.test(name)) {\n    setStatusColor(\"red\");\n    setStatus(\"Please enter a valid name using only letters.\");\n    return false;\n  }\n  if (minWeight === \"\" || maxWeight === \"\" || isNaN(minWeight) || isNaN(maxWeight) || parseFloat(minWeight) < 0 || parseFloat(maxWeight) < 0 || parseFloat(minWeight) >= parseFloat(maxWeight) || parseFloat(maxWeight) > 90) {\n    setStatusColor(\"red\");\n    setStatus(\"Please enter valid weight values.\");\n    return false;\n  }\n  if (minHeight === \"\" || maxHeight === \"\" || isNaN(minHeight) || isNaN(maxHeight) || parseFloat(minHeight) < 0 || parseFloat(maxHeight) < 0 || parseFloat(minHeight) >= parseFloat(maxHeight) || parseFloat(maxHeight) > 90) {\n    setStatusColor(\"red\");\n    setStatus(\"Please enter valid height values.\");\n    return false;\n  }\n  if (minLifeSpan === \"\" || maxLifeSpan === \"\" || isNaN(minLifeSpan) || isNaN(maxLifeSpan) || parseInt(minLifeSpan) < 0 || parseInt(maxLifeSpan) < 0 || parseInt(minLifeSpan) >= parseInt(maxLifeSpan) || parseInt(maxLifeSpan) > 20) {\n    setStatusColor(\"red\");\n    setStatus(\"Please enter valid lifespan values.\");\n    return false;\n  }\n  if (selectedTemperaments.length === 0) {\n    setStatusColor(\"red\");\n    setStatus(\"Please select at least one temperament.\");\n    return false;\n  }\n  if (imageURL === \"\" || !isValidImageURL(imageURL)) {\n    setStatusColor(\"red\");\n    setStatus(\"Please enter a valid image URL.\");\n    return false;\n  }\n  return true;\n}\nmodule.exports = {\n  formValidation\n};","map":{"version":3,"names":["formValidation","name","minWeight","maxWeight","minHeight","maxHeight","minLifeSpan","maxLifeSpan","selectedTemperaments","imageURL","isValidImageURL","setStatus","setStatusColor","test","isNaN","parseFloat","parseInt","length","module","exports"],"sources":["C:/Users/j-aco/OneDrive/Escritorio/DoggoApi/PI-Dogs-main/client/src/Utils/FormValidation.js"],"sourcesContent":["function formValidation(\r\n        name, \r\n        minWeight, \r\n        maxWeight, \r\n        minHeight, \r\n        maxHeight, \r\n        minLifeSpan, \r\n        maxLifeSpan,\r\n        selectedTemperaments,\r\n        imageURL,\r\n        isValidImageURL,\r\n        setStatus,\r\n        setStatusColor\r\n    ) {\r\n    if (name === \"\" || !/^[a-zA-Z]+$/.test(name)) {\r\n      setStatusColor(\"red\")\r\n      setStatus(\"Please enter a valid name using only letters.\");\r\n      return false;\r\n    }\r\n  \r\n    if (\r\n      minWeight === \"\" ||\r\n      maxWeight === \"\" ||\r\n      isNaN(minWeight) ||\r\n      isNaN(maxWeight) ||\r\n      parseFloat(minWeight) < 0 ||\r\n      parseFloat(maxWeight) < 0 ||\r\n      parseFloat(minWeight) >= parseFloat(maxWeight) ||\r\n      parseFloat(maxWeight) > 90\r\n    ) {\r\n      setStatusColor(\"red\")\r\n      setStatus(\"Please enter valid weight values.\");\r\n      return false;\r\n    }\r\n  \r\n    if (\r\n      minHeight === \"\" ||\r\n      maxHeight === \"\" ||\r\n      isNaN(minHeight) ||\r\n      isNaN(maxHeight) ||\r\n      parseFloat(minHeight) < 0 ||\r\n      parseFloat(maxHeight) < 0 ||\r\n      parseFloat(minHeight) >= parseFloat(maxHeight) ||\r\n      parseFloat(maxHeight) > 90\r\n    ) {\r\n      setStatusColor(\"red\")\r\n      setStatus(\"Please enter valid height values.\");\r\n      return false;\r\n    }\r\n  \r\n    if (\r\n      minLifeSpan === \"\" ||\r\n      maxLifeSpan === \"\" ||\r\n      isNaN(minLifeSpan) ||\r\n      isNaN(maxLifeSpan) ||\r\n      parseInt(minLifeSpan) < 0 ||\r\n      parseInt(maxLifeSpan) < 0 ||\r\n      parseInt(minLifeSpan) >= parseInt(maxLifeSpan) ||\r\n      parseInt(maxLifeSpan) > 20\r\n    ) {\r\n      setStatusColor(\"red\")\r\n      setStatus(\"Please enter valid lifespan values.\");\r\n      return false;\r\n    }\r\n  \r\n    if (selectedTemperaments.length === 0) {\r\n      setStatusColor(\"red\")\r\n      setStatus(\"Please select at least one temperament.\");\r\n      return false;\r\n    }\r\n  \r\n    if (imageURL === \"\" || !isValidImageURL(imageURL)) {\r\n      setStatusColor(\"red\")\r\n      setStatus(\"Please enter a valid image URL.\");\r\n      return false;\r\n    }\r\n  \r\n    return true;\r\n  }\r\n\r\n  module.exports = {formValidation}"],"mappings":"AAAA,SAASA,cAAcA,CACfC,IAAI,EACJC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,WAAW,EACXC,WAAW,EACXC,oBAAoB,EACpBC,QAAQ,EACRC,eAAe,EACfC,SAAS,EACTC,cAAc,EAChB;EACF,IAAIX,IAAI,KAAK,EAAE,IAAI,CAAC,aAAa,CAACY,IAAI,CAACZ,IAAI,CAAC,EAAE;IAC5CW,cAAc,CAAC,KAAK,CAAC;IACrBD,SAAS,CAAC,+CAA+C,CAAC;IAC1D,OAAO,KAAK;EACd;EAEA,IACET,SAAS,KAAK,EAAE,IAChBC,SAAS,KAAK,EAAE,IAChBW,KAAK,CAACZ,SAAS,CAAC,IAChBY,KAAK,CAACX,SAAS,CAAC,IAChBY,UAAU,CAACb,SAAS,CAAC,GAAG,CAAC,IACzBa,UAAU,CAACZ,SAAS,CAAC,GAAG,CAAC,IACzBY,UAAU,CAACb,SAAS,CAAC,IAAIa,UAAU,CAACZ,SAAS,CAAC,IAC9CY,UAAU,CAACZ,SAAS,CAAC,GAAG,EAAE,EAC1B;IACAS,cAAc,CAAC,KAAK,CAAC;IACrBD,SAAS,CAAC,mCAAmC,CAAC;IAC9C,OAAO,KAAK;EACd;EAEA,IACEP,SAAS,KAAK,EAAE,IAChBC,SAAS,KAAK,EAAE,IAChBS,KAAK,CAACV,SAAS,CAAC,IAChBU,KAAK,CAACT,SAAS,CAAC,IAChBU,UAAU,CAACX,SAAS,CAAC,GAAG,CAAC,IACzBW,UAAU,CAACV,SAAS,CAAC,GAAG,CAAC,IACzBU,UAAU,CAACX,SAAS,CAAC,IAAIW,UAAU,CAACV,SAAS,CAAC,IAC9CU,UAAU,CAACV,SAAS,CAAC,GAAG,EAAE,EAC1B;IACAO,cAAc,CAAC,KAAK,CAAC;IACrBD,SAAS,CAAC,mCAAmC,CAAC;IAC9C,OAAO,KAAK;EACd;EAEA,IACEL,WAAW,KAAK,EAAE,IAClBC,WAAW,KAAK,EAAE,IAClBO,KAAK,CAACR,WAAW,CAAC,IAClBQ,KAAK,CAACP,WAAW,CAAC,IAClBS,QAAQ,CAACV,WAAW,CAAC,GAAG,CAAC,IACzBU,QAAQ,CAACT,WAAW,CAAC,GAAG,CAAC,IACzBS,QAAQ,CAACV,WAAW,CAAC,IAAIU,QAAQ,CAACT,WAAW,CAAC,IAC9CS,QAAQ,CAACT,WAAW,CAAC,GAAG,EAAE,EAC1B;IACAK,cAAc,CAAC,KAAK,CAAC;IACrBD,SAAS,CAAC,qCAAqC,CAAC;IAChD,OAAO,KAAK;EACd;EAEA,IAAIH,oBAAoB,CAACS,MAAM,KAAK,CAAC,EAAE;IACrCL,cAAc,CAAC,KAAK,CAAC;IACrBD,SAAS,CAAC,yCAAyC,CAAC;IACpD,OAAO,KAAK;EACd;EAEA,IAAIF,QAAQ,KAAK,EAAE,IAAI,CAACC,eAAe,CAACD,QAAQ,CAAC,EAAE;IACjDG,cAAc,CAAC,KAAK,CAAC;IACrBD,SAAS,CAAC,iCAAiC,CAAC;IAC5C,OAAO,KAAK;EACd;EAEA,OAAO,IAAI;AACb;AAEAO,MAAM,CAACC,OAAO,GAAG;EAACnB;AAAc,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}