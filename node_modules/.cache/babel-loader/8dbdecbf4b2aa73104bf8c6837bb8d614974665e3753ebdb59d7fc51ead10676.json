{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\j-aco\\\\OneDrive\\\\Escritorio\\\\PI-Dogs-main\\\\client\\\\src\\\\Components\\\\NavBar\\\\NavBar.jsx\",\n  _s = $RefreshSig$();\nimport \"./NavBar.modules.css\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateSelectedTemperaments, getTemperaments, updateSelectedIdType } from \"../../Redux/actions\";\nimport { RadioGroup, Radio } from \"@material-ui/core\";\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NavBar() {\n  _s();\n  const dispatch = useDispatch();\n  const [selectedTemperaments, setSelectedTemperaments] = useState([]);\n  const [selectedIdType, setSelectedIdType] = useState(\"\");\n  const [filterLabel, setFilterLabel] = useState(\"\");\n  const [filterMode, setFilterMode] = useState(\"or\");\n  const temperaments = useSelector(state => state.temperaments);\n  useEffect(() => {\n    dispatch(getTemperaments());\n  }, []);\n  useEffect(() => {\n    setFilterLabel(\"Selected Temperaments: \" + selectedTemperaments.filter(Boolean).join(\", \"));\n  }, [selectedTemperaments]);\n\n  // Función que se ejecutará cada vez que cambie el filtro de temperamentos\n  const handleTemperamentChange = useCallback((selected, selectedFilterMode) => {\n    setSelectedTemperaments(prevSelectedTemperaments => {\n      if (prevSelectedTemperaments.includes(selected[0])) {\n        return prevSelectedTemperaments.filter(temperament => temperament !== selected[0]);\n      } else {\n        let newSelectedTemperaments;\n        if (selectedFilterMode === \"and\") {\n          // Filter by AND\n          newSelectedTemperaments = selected;\n        } else {\n          // Filter by OR\n          newSelectedTemperaments = [...prevSelectedTemperaments, ...selected];\n        }\n        return [...new Set(newSelectedTemperaments)];\n      }\n    });\n  }, []);\n  const handleClearSelectedTemperaments = () => {\n    setSelectedTemperaments([]);\n  };\n\n  // Función que se ejecutará cada vez que cambie el filtro de tipo de ID\n  const handleSelectIdType = useCallback(e => {\n    setSelectedIdType(e.target.value);\n  }, []);\n\n  // Función que se ejecutará cada vez que cambien los filtros\n  useEffect(() => {\n    dispatch(updateSelectedTemperaments(selectedTemperaments));\n    dispatch(updateSelectedIdType(selectedIdType));\n  }, [selectedTemperaments, selectedIdType, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Filter by temperament:\", /*#__PURE__*/_jsxDEV(Select, {\n          isMulti: true,\n          options: temperaments,\n          onChange: selected => handleTemperamentChange(selected, filterMode)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: filterLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Filter by ID Type:\", /*#__PURE__*/_jsxDEV(Select, {\n          options: [{\n            value: \"name\",\n            label: \"Name\"\n          }, {\n            value: \"id\",\n            label: \"ID\"\n          }],\n          onChange: selected => setSelectedIdType(selected.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Filter Mode:\", /*#__PURE__*/_jsxDEV(RadioGroup, {\n          value: filterMode,\n          onChange: event => setFilterMode(event.target.value),\n          children: [/*#__PURE__*/_jsxDEV(Radio, {\n            value: \"and\",\n            children: \"AND\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Radio, {\n            value: \"or\",\n            children: \"OR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this);\n}\n_s(NavBar, \"y2yhlQ/eozoRar/up4jSJv3EIUg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["useState","useEffect","useCallback","useSelector","useDispatch","updateSelectedTemperaments","getTemperaments","updateSelectedIdType","RadioGroup","Radio","Select","jsxDEV","_jsxDEV","NavBar","_s","dispatch","selectedTemperaments","setSelectedTemperaments","selectedIdType","setSelectedIdType","filterLabel","setFilterLabel","filterMode","setFilterMode","temperaments","state","filter","Boolean","join","handleTemperamentChange","selected","selectedFilterMode","prevSelectedTemperaments","includes","temperament","newSelectedTemperaments","Set","handleClearSelectedTemperaments","handleSelectIdType","e","target","value","children","isMulti","options","onChange","fileName","_jsxFileName","lineNumber","columnNumber","label","event","_c","$RefreshReg$"],"sources":["C:/Users/j-aco/OneDrive/Escritorio/PI-Dogs-main/client/src/Components/NavBar/NavBar.jsx"],"sourcesContent":["import \"./NavBar.modules.css\"\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateSelectedTemperaments, getTemperaments, updateSelectedIdType } from \"../../Redux/actions\";\r\nimport { RadioGroup, Radio } from \"@material-ui/core\";\r\nimport Select from 'react-select';\r\n\r\n\r\nexport default function NavBar() {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [selectedTemperaments, setSelectedTemperaments] = useState([]);\r\n    const [selectedIdType, setSelectedIdType] = useState(\"\");\r\n    const [filterLabel, setFilterLabel] = useState(\"\");\r\n    const [filterMode, setFilterMode] = useState(\"or\");\r\n\r\n    const temperaments = useSelector((state) => state.temperaments);\r\n\r\n    useEffect(() => {\r\n        dispatch(getTemperaments());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      setFilterLabel(\"Selected Temperaments: \" + selectedTemperaments.filter(Boolean).join(\", \"));\r\n  }, [selectedTemperaments]);\r\n\r\n    // Función que se ejecutará cada vez que cambie el filtro de temperamentos\r\n    const handleTemperamentChange = useCallback((selected, selectedFilterMode) => {\r\n      setSelectedTemperaments((prevSelectedTemperaments) => {\r\n        if (prevSelectedTemperaments.includes(selected[0])) {\r\n          return prevSelectedTemperaments.filter((temperament) => temperament !== selected[0]);\r\n        } else {\r\n          let newSelectedTemperaments;\r\n          if (selectedFilterMode === \"and\") {\r\n            // Filter by AND\r\n            newSelectedTemperaments = selected;\r\n          } else {\r\n            // Filter by OR\r\n            newSelectedTemperaments = [...prevSelectedTemperaments, ...selected];\r\n          }\r\n          return [...new Set(newSelectedTemperaments)];\r\n        }\r\n      });\r\n    }, []);\r\n    \r\n  \r\n\r\n    const handleClearSelectedTemperaments = () => {\r\n      setSelectedTemperaments([]);\r\n    };\r\n\r\n    // Función que se ejecutará cada vez que cambie el filtro de tipo de ID\r\n    const handleSelectIdType = useCallback((e) => {\r\n        setSelectedIdType(e.target.value);\r\n    }, []);\r\n\r\n    // Función que se ejecutará cada vez que cambien los filtros\r\n    useEffect(() => {\r\n        dispatch(updateSelectedTemperaments(selectedTemperaments));\r\n        dispatch(updateSelectedIdType(selectedIdType));\r\n    }, [selectedTemperaments, selectedIdType, dispatch]);\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <label>\r\n            Filter by temperament:\r\n            <Select\r\n              isMulti\r\n              options={temperaments}\r\n              onChange={(selected) => handleTemperamentChange(selected, filterMode)}\r\n            />\r\n          </label>\r\n          <div>{filterLabel}</div>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Filter by ID Type:\r\n            <Select\r\n              options={[\r\n                { value: \"name\", label: \"Name\" },\r\n                { value: \"id\", label: \"ID\" },\r\n              ]}\r\n              onChange={(selected) => setSelectedIdType(selected.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Filter Mode:\r\n            <RadioGroup value={filterMode} onChange={(event) => setFilterMode(event.target.value)}>\r\n              <Radio value=\"and\">AND</Radio>\r\n              <Radio value=\"or\">OR</Radio>\r\n            </RadioGroup>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}